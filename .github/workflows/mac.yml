name: macOS Remote Desktop (CRD)

on:
  workflow_dispatch:
    inputs:
      crd_auth_code:
        description: 'Paste ONLY the auth code, not the full command'
        required: true
      pin_code:
        description: '6-digit PIN for the connection'
        default: '123456'
        required: true

jobs:
  build:
    runs-on: macos-13

    steps:
      - name: 1. Install Dependencies
        run: |
          echo "Installing Google Chrome and CRD Host via Homebrew..."
          brew install --cask google-chrome
          brew install --cask chrome-remote-desktop-host
      
      - name: 2. Correctly Bootstrap CRD Service
        run: |
          echo "Bootstrapping the CRD Launch Agent for the current user..."
          # Get the current user's ID (e.g., 501)
          RUNNER_UID=$(id -u)
          echo "Runner UID is $RUNNER_UID"
          
          # Use the modern 'bootstrap' command to load the service into the user's context
          sudo launchctl bootstrap gui/$RUNNER_UID /Library/LaunchAgents/com.google.chrome.remote_desktop.plist
          
      - name: 3. Locate the CRD Executable
        id: find_crd
        run: |
          echo "Searching for remoting_start_host executable..."
          # Find the path and export it to a GitHub environment variable
          CRD_EXEC_PATH=$(find "/Users/runner/Applications" -name "remoting_start_host" 2>/dev/null)
          echo "Found at: $CRD_EXEC_PATH"
          echo "CRD_EXEC_PATH=$CRD_EXEC_PATH" >> $GITHUB_ENV
            
      - name: 4. Start Chrome Remote Desktop Host
        run: |
          echo "Starting CRD Host using dynamically found path..."
          # Use the path we found in the previous step
          "${{ env.CRD_EXEC_PATH }}" \
            --code="${{ github.event.inputs.crd_auth_code }}" \
            --redirect-url="https://remotedesktop.google.com/_/oauthredirect" \
            --name=GitHub-macOS-Runner \
            -pin=${{ github.event.inputs.pin_code }} &
            
      - name: 5. Display Info and Keep Alive
        run: |
          # A short delay to ensure the service has time to register online
          sleep 15
          
          echo "âœ… Your session should be ready!"
          echo "--------------------------------------------------------"
          echo "Connect at: https://remotedesktop.google.com/access"
          echo "The runner will appear as 'GitHub-macOS-Runner'."
          echo "PIN: ${{ github.event.inputs.pin_code }}"
          echo "--------------------------------------------------------"
          echo "Session is active. This job will time out in ~6 hours."
          echo "To end the session, cancel the GitHub Actions workflow."
          sleep 21600 # Keep alive for 6 hours
